---
import { COMPONENTS, LAYOUTS, BEST_PRACTICES } from '../config';
import SkipToContent from './Header/SkipToContent.astro';
const { currentPage } = Astro.props;
---
<header title="Site Navigation">
	<SkipToContent />
	<div class="header-top">
		<a href="/" class="logo">
			<span class="sr-only">Cucumber Components Home Page</span>
			<img src="/cucumber-components.svg" role="presentation">
		</a>
		<a title="Github" class="github" href="https://github.com/heybran/breeze-components" target="_blank">
			<span class="sr-only">Go to github repo</span>
			<img src="/github.svg" alt="github logo">
		</a>
		<button id="toggle-mobile-menu" aria-label="Toggle Menu on Mobile">Menu</button>
	</div>
	<nav aria-label="Main Navigation">
		<!-- https://dequeuniversity.com/rules/axe/4.7/landmark-unique?application=axeAPI -->
		<!-- https://www.w3.org/WAI/ARIA/apg/patterns/landmarks/examples/navigation.html -->
		<h2>{COMPONENTS.heading}</h2>
		<ul>
			{COMPONENTS.items.map(item => (
				<li>
					<a href={item.link}>{item.text}</a>
				</li>))}
		</ul>

		<h2>{LAYOUTS.heading}</h2>
		<ul>
			{LAYOUTS.items.map(item => (
				<li>
					<a href={item.link}>{item.text}</a>
				</li>))}
		</ul>

		<h2>{BEST_PRACTICES.heading}</h2>
		<ul>
			{BEST_PRACTICES.items.map(item => (
				<li>
					<a href={item.link}>{item.text}</a>
				</li>))}
		</ul>
	</nav>
</header>

<style>
	li {
		transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
		color: rgb(100 116 139 / 1);
	}
	li.current {
		color: rgb(15 23 42 / 1);
		font-weight: 500;
	}
	header {
		height: 100vh;
  	height: 100dvh;
		border-right-width: 1px;
		display: flex;
		flex-direction: column;
		border: 1px solid #e5e7eb;
		overflow-y: auto;
		border-top: 0;
	}
	.header-top {
		border-bottom: 1px solid #e5e7eb;
		display: flex;
		align-items: center;
	}
	header .github {
		padding: 0;
		padding-inline: 0.5em;
		margin: 0;
	}
	#toggle-mobile-menu {
		display: none;
		font-size: 1.2rem;
	}
	a {
		display: block;
		padding-top: 0.35rem;
    padding-bottom: 0.35rem;
		padding-left: 2rem;
    padding-right: 2rem;
		text-decoration: none;
		color: inherit;
	}
	.logo {
		width: 16rem;
		padding-block: 1rem;
		border-bottom-width: 1px;
		border-right: 1px solid #e5e7eb;
	}
	a[title="Github"] {
		margin-block: 1rem;
		display: block;
	}
	ul {
		list-style: none;
    margin: 0;
    padding: 0;
	}
	nav ul:last-of-type {
		padding-bottom: 4rem;
	}
	nav h2 {
		font-weight: 600;
		padding: 0.5rem 2rem;
		margin-top: 2rem;
		font-size: 1.5rem;
		margin-bottom: 0;
	}
	@media screen and (any-pointer: coarse) {
		.logo {
			border-right-width: 0;
		}
		header {
			position: fixed;
			width: 100%;
			border: none;
			z-index: 9;
			height: auto;
		}
		header.expanded {
			background-color: white;
			height: 100vh;
			height: 100dvh;
		}
		.header-top {
			background-color: white;
			display: flex;
    	justify-content: space-between;
			height: 5rem;
		}
		header #toggle-mobile-menu {
			display: block;
			background: none;
			border: none;
			padding-inline: 2rem;
		}
		nav {
			position: absolute;
			left: -100%;
			top: 5rem;
			/* transform: translateX(-100%); */
			width: 100%;
			background-color: white;
			pointer-events: none;
			height: calc(100vh - 5rem);
			height: calc(100dvb - 5rem);
			overflow: auto;
		}
		header.expanded nav {
			left: 0;
			/* transform: translateX(0); */
			transition: 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
			pointer-events: initial;
		}
	}
</style>

<script is:inline>
	window.addEventListener('DOMContentLoaded', (event) => {
		let path = location.pathname;
		if (path.endsWith('/')) {
			path = path.replace(/\/$/, "");
		} else {
			document.querySelector(`a[href="${path}"]`).parentElement.classList.add('current');
		}

		var target = document.querySelector('[aria-current="page"]');
		if (target && target.offsetTop > window.innerHeight - 100) {
			document.querySelector('.nav-groups').scrollTop = target.offsetTop;
		}

		const headerButton = document.querySelector('#toggle-mobile-menu');
		headerButton?.addEventListener('click', () => {
			headerButton.closest('header').classList.toggle('expanded');
		});
	});
</script>


