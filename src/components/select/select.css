:host {
  display: inline-block;
}

[part="container"] {
  position: relative;
}

[part="input-container"] {
  padding-inline-end: 1ch;
}

/* Has been moved to shared CSS */
/* [part=input-container]:focus-within {
  border-color: var(--border-color-focus);
  box-shadow: 0 0 0 0.1875rem var(--box-shadow-color);
} */

[part="input"] {
  /* cursor: pointer;
  -webkit-appearance: none;
  background: transparent;
  font: inherit;
  margin: 0;
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: space-between;
  border: 1px solid var(--_border-color-normal);
  transition: .15s cubic-bezier(.22,1,.36,1), visibility 0s;
  border-radius: var(--_border-radius-md);
  padding: 1ch 1ch 1ch 1.5ch;
  width: 100%;
  gap: .5em; */

  width: 100%;
  height: auto;
  background: none;
  border-radius: var(--border-radius);
  min-height: 0;
  min-width: 0;
  color: inherit;
  outline: none;
  padding: 1ch 1.5ch;
  -webkit-appearance: none;
  font: inherit;
  margin: 0;
  border: 0;
}

[part="close"] {
  display: none; /* todo */
}

[part="dropdown"] {
  background-color: #fff;
  border-radius: var(--_border-radius-md);
  max-height: calc(min(var(--available-height, var(--max-height)), var(--max-height)) - 2px);
  max-height: 300px;
  /* max-width: calc(min(var(--available-width, var(--max-width)), var(--max-width)) - 2px); */
  min-height: min(var(--min-height,1em),100vh);
  /* min-width: min(var(--min-width,1.5em),100vw); */
  overflow: auto;
  /* width: var(--width); */
  width: 100%; /* now is absolute position */
  box-shadow: rgb(35 35 52 / 20%) 0px 7px 29px 0px;
  position: absolute;
  z-index: 999;
  visibility: hidden;
  pointer-events: none;
  display: gird;
}

[part="dropdown"]::backdrop {
  background-color: transparent;
  pointer-events: none;
}

[aria-expanded="true"][part="dropdown"] {
  /* transform: scale(1); */
  left: 0;
  top: calc(100% + 10px);
  visibility: visible;
  pointer-events: all;
  transition: .15s cubic-bezier(.22,1,.36,1), visibility 0s;
  animation: scale .15s cubic-bezier(.33,1,.68,1) both;
}

[part="dropdown-content"] {
  display: flex;
  flex-direction: column;
  gap: 2px;
  padding-block: 4px;
}

[part="suffix"], [part="prefix"] {
  line-height: 0;
}

@keyframes scale {
  0% {
    opacity: 0;
    transform: scale(.75);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

::slotted([slot="suffix"]) {
  flex: none;
  width: 1em;
  height: 1em;
  line-height: 1;
  transition: 0.2s color;
  pointer-events: none;
}

[part="input"][aria-expanded="true"] ::slotted([slot="suffix"]),
[part="input"][aria-expanded="true"] [part="suffix"] {
  transform: rotate(180deg);
}

label {
  font-weight: var(--label-font-weight, 600);
  /* cancel previous top padding as it will mess up with layout,
    if component is being used with other standard native form labels.
  */
  padding-block-end: 0.5em;
  display: inline-block;
}

label:not(:empty) + [part="input"] {
  margin-top: .25em;
}

slot[name="suffix"] > * {
  pointer-events: none;
}